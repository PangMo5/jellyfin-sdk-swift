//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Class CountryInfo. */
public struct CountryInfoModel: APIModel {

    /** Gets or sets the display name. */
    public var displayName: String?

    /** Gets or sets the name. */
    public var name: String?

    /** Gets or sets the name of the three letter ISO region. */
    public var threeLetterISORegionName: String?

    /** Gets or sets the name of the two letter ISO region. */
    public var twoLetterISORegionName: String?

    public init(displayName: String? = nil, name: String? = nil, threeLetterISORegionName: String? = nil, twoLetterISORegionName: String? = nil) {
        self.displayName = displayName
        self.name = name
        self.threeLetterISORegionName = threeLetterISORegionName
        self.twoLetterISORegionName = twoLetterISORegionName
    }

    public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: StringCodingKey.self)

        displayName = try decoderContainer.decodeIfPresent("DisplayName")
        name = try decoderContainer.decodeIfPresent("Name")
        threeLetterISORegionName = try decoderContainer.decodeIfPresent("ThreeLetterISORegionName")
        twoLetterISORegionName = try decoderContainer.decodeIfPresent("TwoLetterISORegionName")
    }

    public func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: StringCodingKey.self)

        try encoderContainer.encodeIfPresent(displayName, forKey: "DisplayName")
        try encoderContainer.encodeIfPresent(name, forKey: "Name")
        try encoderContainer.encodeIfPresent(threeLetterISORegionName, forKey: "ThreeLetterISORegionName")
        try encoderContainer.encodeIfPresent(twoLetterISORegionName, forKey: "TwoLetterISORegionName")
    }

}
