//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Class ChapterInfo. */
public struct ChapterInfoModel: APIModel {

    public var imageDateModified: DateTime?

    /** Gets or sets the image path. */
    public var imagePath: String?

    public var imageTag: String?

    /** Gets or sets the name. */
    public var name: String?

    /** Gets or sets the start position ticks. */
    public var startPositionTicks: Int?

    public init(imageDateModified: DateTime? = nil, imagePath: String? = nil, imageTag: String? = nil, name: String? = nil, startPositionTicks: Int? = nil) {
        self.imageDateModified = imageDateModified
        self.imagePath = imagePath
        self.imageTag = imageTag
        self.name = name
        self.startPositionTicks = startPositionTicks
    }

    public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: StringCodingKey.self)

        imageDateModified = try decoderContainer.decodeIfPresent("ImageDateModified")
        imagePath = try decoderContainer.decodeIfPresent("ImagePath")
        imageTag = try decoderContainer.decodeIfPresent("ImageTag")
        name = try decoderContainer.decodeIfPresent("Name")
        startPositionTicks = try decoderContainer.decodeIfPresent("StartPositionTicks")
    }

    public func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: StringCodingKey.self)

        try encoderContainer.encodeIfPresent(imageDateModified, forKey: "ImageDateModified")
        try encoderContainer.encodeIfPresent(imagePath, forKey: "ImagePath")
        try encoderContainer.encodeIfPresent(imageTag, forKey: "ImageTag")
        try encoderContainer.encodeIfPresent(name, forKey: "Name")
        try encoderContainer.encodeIfPresent(startPositionTicks, forKey: "StartPositionTicks")
    }

}
