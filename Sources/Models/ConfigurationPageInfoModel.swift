//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** The configuration page info. */
public struct ConfigurationPageInfoModel: APIModel {

    public var configurationPageType: ConfigurationPageType?

    /** Gets or sets the display name. */
    public var displayName: String?

    /** Gets or sets a value indicating whether the configurations page is enabled in the main menu. */
    public var enableInMainMenu: Bool?

    /** Gets or sets the menu icon. */
    public var menuIcon: String?

    /** Gets or sets the menu section. */
    public var menuSection: String?

    /** Gets or sets the name. */
    public var name: String?

    /** Gets or sets the plugin id. */
    public var pluginId: ID?

    public init(configurationPageType: ConfigurationPageType? = nil, displayName: String? = nil, enableInMainMenu: Bool? = nil, menuIcon: String? = nil, menuSection: String? = nil, name: String? = nil, pluginId: ID? = nil) {
        self.configurationPageType = configurationPageType
        self.displayName = displayName
        self.enableInMainMenu = enableInMainMenu
        self.menuIcon = menuIcon
        self.menuSection = menuSection
        self.name = name
        self.pluginId = pluginId
    }

    public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: StringCodingKey.self)

        configurationPageType = try decoderContainer.decodeIfPresent("ConfigurationPageType")
        displayName = try decoderContainer.decodeIfPresent("DisplayName")
        enableInMainMenu = try decoderContainer.decodeIfPresent("EnableInMainMenu")
        menuIcon = try decoderContainer.decodeIfPresent("MenuIcon")
        menuSection = try decoderContainer.decodeIfPresent("MenuSection")
        name = try decoderContainer.decodeIfPresent("Name")
        pluginId = try decoderContainer.decodeIfPresent("PluginId")
    }

    public func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: StringCodingKey.self)

        try encoderContainer.encodeIfPresent(configurationPageType, forKey: "ConfigurationPageType")
        try encoderContainer.encodeIfPresent(displayName, forKey: "DisplayName")
        try encoderContainer.encodeIfPresent(enableInMainMenu, forKey: "EnableInMainMenu")
        try encoderContainer.encodeIfPresent(menuIcon, forKey: "MenuIcon")
        try encoderContainer.encodeIfPresent(menuSection, forKey: "MenuSection")
        try encoderContainer.encodeIfPresent(name, forKey: "Name")
        try encoderContainer.encodeIfPresent(pluginId, forKey: "PluginId")
    }

}
