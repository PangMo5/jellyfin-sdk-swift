//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public struct AllThemeMediaResultModel: APIModel {

    public var soundtrackSongsResult: ThemeMediaResultModel?

    public var themeSongsResult: ThemeMediaResultModel?

    public var themeVideosResult: ThemeMediaResultModel?

    public init(soundtrackSongsResult: ThemeMediaResultModel? = nil, themeSongsResult: ThemeMediaResultModel? = nil, themeVideosResult: ThemeMediaResultModel? = nil) {
        self.soundtrackSongsResult = soundtrackSongsResult
        self.themeSongsResult = themeSongsResult
        self.themeVideosResult = themeVideosResult
    }

    public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: StringCodingKey.self)

        soundtrackSongsResult = try decoderContainer.decodeIfPresent("SoundtrackSongsResult")
        themeSongsResult = try decoderContainer.decodeIfPresent("ThemeSongsResult")
        themeVideosResult = try decoderContainer.decodeIfPresent("ThemeVideosResult")
    }

    public func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: StringCodingKey.self)

        try encoderContainer.encodeIfPresent(soundtrackSongsResult, forKey: "SoundtrackSongsResult")
        try encoderContainer.encodeIfPresent(themeSongsResult, forKey: "ThemeSongsResult")
        try encoderContainer.encodeIfPresent(themeVideosResult, forKey: "ThemeVideosResult")
    }

}
