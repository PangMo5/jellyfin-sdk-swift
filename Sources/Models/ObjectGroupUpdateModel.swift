//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Class GroupUpdate. */
public struct ObjectGroupUpdateModel: APIModel {

    /** Gets the update data. */
    public var data: AnyCodable?

    /** Gets the group identifier. */
    public var groupId: ID?

    public var type: GroupUpdateType?

    public init(data: AnyCodable? = nil, groupId: ID? = nil, type: GroupUpdateType? = nil) {
        self.data = data
        self.groupId = groupId
        self.type = type
    }

    public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: StringCodingKey.self)

        data = try decoderContainer.decodeAnyIfPresent("Data")
        groupId = try decoderContainer.decodeIfPresent("GroupId")
        type = try decoderContainer.decodeIfPresent("Type")
    }

    public func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: StringCodingKey.self)

        try encoderContainer.encodeAnyIfPresent(data, forKey: "Data")
        try encoderContainer.encodeIfPresent(groupId, forKey: "GroupId")
        try encoderContainer.encodeIfPresent(type, forKey: "Type")
    }

}
