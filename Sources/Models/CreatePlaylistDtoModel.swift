//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Create new playlist dto. */
public struct CreatePlaylistDtoModel: APIModel {

    /** Gets or sets item ids to add to the playlist. */
    public var ids: [ID]?

    /** Gets or sets the media type. */
    public var mediaType: String?

    /** Gets or sets the name of the new playlist. */
    public var name: String?

    /** Gets or sets the user id. */
    public var userId: ID?

    public init(ids: [ID]? = nil, mediaType: String? = nil, name: String? = nil, userId: ID? = nil) {
        self.ids = ids
        self.mediaType = mediaType
        self.name = name
        self.userId = userId
    }

    public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: StringCodingKey.self)

        ids = try decoderContainer.decodeArrayIfPresent("Ids")
        mediaType = try decoderContainer.decodeIfPresent("MediaType")
        name = try decoderContainer.decodeIfPresent("Name")
        userId = try decoderContainer.decodeIfPresent("UserId")
    }

    public func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: StringCodingKey.self)

        try encoderContainer.encodeIfPresent(ids, forKey: "Ids")
        try encoderContainer.encodeIfPresent(mediaType, forKey: "MediaType")
        try encoderContainer.encodeIfPresent(name, forKey: "Name")
        try encoderContainer.encodeIfPresent(userId, forKey: "UserId")
    }

}
