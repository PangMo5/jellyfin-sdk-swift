//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Class GroupInfoDto. */
public struct GroupInfoDtoModel: APIModel {

    /** Gets the group identifier. */
    public var groupId: ID?

    /** Gets the group name. */
    public var groupName: String?

    /** Gets the date when this DTO has been created. */
    public var lastUpdatedAt: DateTime?

    /** Gets the participants. */
    public var participants: [String]?

    public var state: GroupStateType?

    public init(groupId: ID? = nil, groupName: String? = nil, lastUpdatedAt: DateTime? = nil, participants: [String]? = nil, state: GroupStateType? = nil) {
        self.groupId = groupId
        self.groupName = groupName
        self.lastUpdatedAt = lastUpdatedAt
        self.participants = participants
        self.state = state
    }

    public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: StringCodingKey.self)

        groupId = try decoderContainer.decodeIfPresent("GroupId")
        groupName = try decoderContainer.decodeIfPresent("GroupName")
        lastUpdatedAt = try decoderContainer.decodeIfPresent("LastUpdatedAt")
        participants = try decoderContainer.decodeArrayIfPresent("Participants")
        state = try decoderContainer.decodeIfPresent("State")
    }

    public func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: StringCodingKey.self)

        try encoderContainer.encodeIfPresent(groupId, forKey: "GroupId")
        try encoderContainer.encodeIfPresent(groupName, forKey: "GroupName")
        try encoderContainer.encodeIfPresent(lastUpdatedAt, forKey: "LastUpdatedAt")
        try encoderContainer.encodeIfPresent(participants, forKey: "Participants")
        try encoderContainer.encodeIfPresent(state, forKey: "State")
    }

}
