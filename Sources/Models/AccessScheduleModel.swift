//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** An entity representing a user's access schedule. */
public struct AccessScheduleModel: APIModel {

    public var dayOfWeek: DynamicDayOfWeek

    /** Gets or sets the end hour. */
    public var endHour: Double

    /** Gets or sets the id of this instance. */
    public var id: Int

    /** Gets or sets the start hour. */
    public var startHour: Double

    /** Gets or sets the id of the associated user. */
    public var userId: ID

    public init(dayOfWeek: DynamicDayOfWeek, endHour: Double, id: Int, startHour: Double, userId: ID) {
        self.dayOfWeek = dayOfWeek
        self.endHour = endHour
        self.id = id
        self.startHour = startHour
        self.userId = userId
    }

    public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: StringCodingKey.self)

        dayOfWeek = try decoderContainer.decode("DayOfWeek")
        endHour = try decoderContainer.decode("EndHour")
        id = try decoderContainer.decode("Id")
        startHour = try decoderContainer.decode("StartHour")
        userId = try decoderContainer.decode("UserId")
    }

    public func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: StringCodingKey.self)

        try encoderContainer.encode(dayOfWeek, forKey: "DayOfWeek")
        try encoderContainer.encode(endHour, forKey: "EndHour")
        try encoderContainer.encode(id, forKey: "Id")
        try encoderContainer.encode(startHour, forKey: "StartHour")
        try encoderContainer.encode(userId, forKey: "UserId")
    }

}
