//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Class PlaybackInfoResponse. */
public struct PlaybackInfoResponseModel: APIModel {

    public var errorCode: PlaybackErrorCode?

    /** Gets or sets the media sources. */
    public var mediaSources: [MediaSourceInfoModel]?

    /** Gets or sets the play session identifier. */
    public var playSessionId: String?

    public init(errorCode: PlaybackErrorCode? = nil, mediaSources: [MediaSourceInfoModel]? = nil, playSessionId: String? = nil) {
        self.errorCode = errorCode
        self.mediaSources = mediaSources
        self.playSessionId = playSessionId
    }

    public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: StringCodingKey.self)

        errorCode = try decoderContainer.decodeIfPresent("ErrorCode")
        mediaSources = try decoderContainer.decodeArrayIfPresent("MediaSources")
        playSessionId = try decoderContainer.decodeIfPresent("PlaySessionId")
    }

    public func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: StringCodingKey.self)

        try encoderContainer.encodeIfPresent(errorCode, forKey: "ErrorCode")
        try encoderContainer.encodeIfPresent(mediaSources, forKey: "MediaSources")
        try encoderContainer.encodeIfPresent(playSessionId, forKey: "PlaySessionId")
    }

}
