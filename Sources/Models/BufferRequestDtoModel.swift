//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Class BufferRequestDto. */
public struct BufferRequestDtoModel: APIModel {

    /** Gets or sets a value indicating whether the client playback is unpaused. */
    public var isPlaying: Bool?

    /** Gets or sets the playlist item identifier of the playing item. */
    public var playlistItemId: ID?

    /** Gets or sets the position ticks. */
    public var positionTicks: Int?

    /** Gets or sets when the request has been made by the client. */
    public var when: DateTime?

    public init(isPlaying: Bool? = nil, playlistItemId: ID? = nil, positionTicks: Int? = nil, when: DateTime? = nil) {
        self.isPlaying = isPlaying
        self.playlistItemId = playlistItemId
        self.positionTicks = positionTicks
        self.when = when
    }

    public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: StringCodingKey.self)

        isPlaying = try decoderContainer.decodeIfPresent("IsPlaying")
        playlistItemId = try decoderContainer.decodeIfPresent("PlaylistItemId")
        positionTicks = try decoderContainer.decodeIfPresent("PositionTicks")
        when = try decoderContainer.decodeIfPresent("When")
    }

    public func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: StringCodingKey.self)

        try encoderContainer.encodeIfPresent(isPlaying, forKey: "IsPlaying")
        try encoderContainer.encodeIfPresent(playlistItemId, forKey: "PlaylistItemId")
        try encoderContainer.encodeIfPresent(positionTicks, forKey: "PositionTicks")
        try encoderContainer.encodeIfPresent(when, forKey: "When")
    }

}
