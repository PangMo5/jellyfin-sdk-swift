//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public struct NotificationTypeInfoModel: APIModel {

    public var category: String?

    public var enabled: Bool?

    public var isBasedOnUserEvent: Bool?

    public var name: String?

    public var type: String?

    public init(category: String? = nil, enabled: Bool? = nil, isBasedOnUserEvent: Bool? = nil, name: String? = nil, type: String? = nil) {
        self.category = category
        self.enabled = enabled
        self.isBasedOnUserEvent = isBasedOnUserEvent
        self.name = name
        self.type = type
    }

    public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: StringCodingKey.self)

        category = try decoderContainer.decodeIfPresent("Category")
        enabled = try decoderContainer.decodeIfPresent("Enabled")
        isBasedOnUserEvent = try decoderContainer.decodeIfPresent("IsBasedOnUserEvent")
        name = try decoderContainer.decodeIfPresent("Name")
        type = try decoderContainer.decodeIfPresent("Type")
    }

    public func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: StringCodingKey.self)

        try encoderContainer.encodeIfPresent(category, forKey: "Category")
        try encoderContainer.encodeIfPresent(enabled, forKey: "Enabled")
        try encoderContainer.encodeIfPresent(isBasedOnUserEvent, forKey: "IsBasedOnUserEvent")
        try encoderContainer.encodeIfPresent(name, forKey: "Name")
        try encoderContainer.encodeIfPresent(type, forKey: "Type")
    }

}
