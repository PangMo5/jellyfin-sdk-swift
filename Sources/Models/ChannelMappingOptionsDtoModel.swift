//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Channel mapping options dto. */
public struct ChannelMappingOptionsDtoModel: APIModel {

    /** Gets or sets list of mappings. */
    public var mappings: [NameValuePairModel]?

    /** Gets or sets list of provider channels. */
    public var providerChannels: [NameIdPairModel]?

    /** Gets or sets provider name. */
    public var providerName: String?

    /** Gets or sets list of tuner channels. */
    public var tunerChannels: [TunerChannelMappingModel]?

    public init(mappings: [NameValuePairModel]? = nil, providerChannels: [NameIdPairModel]? = nil, providerName: String? = nil, tunerChannels: [TunerChannelMappingModel]? = nil) {
        self.mappings = mappings
        self.providerChannels = providerChannels
        self.providerName = providerName
        self.tunerChannels = tunerChannels
    }

    public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: StringCodingKey.self)

        mappings = try decoderContainer.decodeArrayIfPresent("Mappings")
        providerChannels = try decoderContainer.decodeArrayIfPresent("ProviderChannels")
        providerName = try decoderContainer.decodeIfPresent("ProviderName")
        tunerChannels = try decoderContainer.decodeArrayIfPresent("TunerChannels")
    }

    public func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: StringCodingKey.self)

        try encoderContainer.encodeIfPresent(mappings, forKey: "Mappings")
        try encoderContainer.encodeIfPresent(providerChannels, forKey: "ProviderChannels")
        try encoderContainer.encodeIfPresent(providerName, forKey: "ProviderName")
        try encoderContainer.encodeIfPresent(tunerChannels, forKey: "TunerChannels")
    }

}
