//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public struct RecommendationDtoModel: APIModel {

    public var baselineItemName: String?

    public var categoryId: ID?

    public var items: [BaseItemDtoModel]?

    public var recommendationType: RecommendationType?

    public init(baselineItemName: String? = nil, categoryId: ID? = nil, items: [BaseItemDtoModel]? = nil, recommendationType: RecommendationType? = nil) {
        self.baselineItemName = baselineItemName
        self.categoryId = categoryId
        self.items = items
        self.recommendationType = recommendationType
    }

    public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: StringCodingKey.self)

        baselineItemName = try decoderContainer.decodeIfPresent("BaselineItemName")
        categoryId = try decoderContainer.decodeIfPresent("CategoryId")
        items = try decoderContainer.decodeArrayIfPresent("Items")
        recommendationType = try decoderContainer.decodeIfPresent("RecommendationType")
    }

    public func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: StringCodingKey.self)

        try encoderContainer.encodeIfPresent(baselineItemName, forKey: "BaselineItemName")
        try encoderContainer.encodeIfPresent(categoryId, forKey: "CategoryId")
        try encoderContainer.encodeIfPresent(items, forKey: "Items")
        try encoderContainer.encodeIfPresent(recommendationType, forKey: "RecommendationType")
    }

}
