//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Class MetadataOptions. */
public struct MetadataOptionsModel: APIModel {

    public var disabledImageFetchers: [String]?

    public var disabledMetadataFetchers: [String]?

    public var disabledMetadataSavers: [String]?

    public var imageFetcherOrder: [String]?

    public var itemType: String?

    public var localMetadataReaderOrder: [String]?

    public var metadataFetcherOrder: [String]?

    public init(disabledImageFetchers: [String]? = nil, disabledMetadataFetchers: [String]? = nil, disabledMetadataSavers: [String]? = nil, imageFetcherOrder: [String]? = nil, itemType: String? = nil, localMetadataReaderOrder: [String]? = nil, metadataFetcherOrder: [String]? = nil) {
        self.disabledImageFetchers = disabledImageFetchers
        self.disabledMetadataFetchers = disabledMetadataFetchers
        self.disabledMetadataSavers = disabledMetadataSavers
        self.imageFetcherOrder = imageFetcherOrder
        self.itemType = itemType
        self.localMetadataReaderOrder = localMetadataReaderOrder
        self.metadataFetcherOrder = metadataFetcherOrder
    }

    public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: StringCodingKey.self)

        disabledImageFetchers = try decoderContainer.decodeArrayIfPresent("DisabledImageFetchers")
        disabledMetadataFetchers = try decoderContainer.decodeArrayIfPresent("DisabledMetadataFetchers")
        disabledMetadataSavers = try decoderContainer.decodeArrayIfPresent("DisabledMetadataSavers")
        imageFetcherOrder = try decoderContainer.decodeArrayIfPresent("ImageFetcherOrder")
        itemType = try decoderContainer.decodeIfPresent("ItemType")
        localMetadataReaderOrder = try decoderContainer.decodeArrayIfPresent("LocalMetadataReaderOrder")
        metadataFetcherOrder = try decoderContainer.decodeArrayIfPresent("MetadataFetcherOrder")
    }

    public func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: StringCodingKey.self)

        try encoderContainer.encodeIfPresent(disabledImageFetchers, forKey: "DisabledImageFetchers")
        try encoderContainer.encodeIfPresent(disabledMetadataFetchers, forKey: "DisabledMetadataFetchers")
        try encoderContainer.encodeIfPresent(disabledMetadataSavers, forKey: "DisabledMetadataSavers")
        try encoderContainer.encodeIfPresent(imageFetcherOrder, forKey: "ImageFetcherOrder")
        try encoderContainer.encodeIfPresent(itemType, forKey: "ItemType")
        try encoderContainer.encodeIfPresent(localMetadataReaderOrder, forKey: "LocalMetadataReaderOrder")
        try encoderContainer.encodeIfPresent(metadataFetcherOrder, forKey: "MetadataFetcherOrder")
    }

}
