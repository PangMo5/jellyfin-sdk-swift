//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Class CultureDto. */
public struct CultureDtoModel: APIModel {

    /** Gets or sets the display name. */
    public var displayName: String?

    /** Gets or sets the name. */
    public var name: String?

    /** Gets or sets the name of the three letter ISO language. */
    public var threeLetterISOLanguageName: String?

    public var threeLetterISOLanguageNames: [String]?

    /** Gets or sets the name of the two letter ISO language. */
    public var twoLetterISOLanguageName: String?

    public init(displayName: String? = nil, name: String? = nil, threeLetterISOLanguageName: String? = nil, threeLetterISOLanguageNames: [String]? = nil, twoLetterISOLanguageName: String? = nil) {
        self.displayName = displayName
        self.name = name
        self.threeLetterISOLanguageName = threeLetterISOLanguageName
        self.threeLetterISOLanguageNames = threeLetterISOLanguageNames
        self.twoLetterISOLanguageName = twoLetterISOLanguageName
    }

    public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: StringCodingKey.self)

        displayName = try decoderContainer.decodeIfPresent("DisplayName")
        name = try decoderContainer.decodeIfPresent("Name")
        threeLetterISOLanguageName = try decoderContainer.decodeIfPresent("ThreeLetterISOLanguageName")
        threeLetterISOLanguageNames = try decoderContainer.decodeArrayIfPresent("ThreeLetterISOLanguageNames")
        twoLetterISOLanguageName = try decoderContainer.decodeIfPresent("TwoLetterISOLanguageName")
    }

    public func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: StringCodingKey.self)

        try encoderContainer.encodeIfPresent(displayName, forKey: "DisplayName")
        try encoderContainer.encodeIfPresent(name, forKey: "Name")
        try encoderContainer.encodeIfPresent(threeLetterISOLanguageName, forKey: "ThreeLetterISOLanguageName")
        try encoderContainer.encodeIfPresent(threeLetterISOLanguageNames, forKey: "ThreeLetterISOLanguageNames")
        try encoderContainer.encodeIfPresent(twoLetterISOLanguageName, forKey: "TwoLetterISOLanguageName")
    }

}
