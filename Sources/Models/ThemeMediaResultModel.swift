//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Class ThemeMediaResult. */
public struct ThemeMediaResultModel: APIModel {

    /** Gets or sets the items. */
    public var items: [BaseItemDtoModel]?

    /** Gets or sets the owner id. */
    public var ownerId: ID?

    /** The index of the first record in Items. */
    public var startIndex: Int?

    /** The total number of records available. */
    public var totalRecordCount: Int?

    public init(items: [BaseItemDtoModel]? = nil, ownerId: ID? = nil, startIndex: Int? = nil, totalRecordCount: Int? = nil) {
        self.items = items
        self.ownerId = ownerId
        self.startIndex = startIndex
        self.totalRecordCount = totalRecordCount
    }

    public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: StringCodingKey.self)

        items = try decoderContainer.decodeArrayIfPresent("Items")
        ownerId = try decoderContainer.decodeIfPresent("OwnerId")
        startIndex = try decoderContainer.decodeIfPresent("StartIndex")
        totalRecordCount = try decoderContainer.decodeIfPresent("TotalRecordCount")
    }

    public func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: StringCodingKey.self)

        try encoderContainer.encodeIfPresent(items, forKey: "Items")
        try encoderContainer.encodeIfPresent(ownerId, forKey: "OwnerId")
        try encoderContainer.encodeIfPresent(startIndex, forKey: "StartIndex")
        try encoderContainer.encodeIfPresent(totalRecordCount, forKey: "TotalRecordCount")
    }

}
