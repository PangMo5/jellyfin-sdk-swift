//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Class TaskInfo. */
public struct TaskInfoModel: APIModel {

    /** Gets or sets the category. */
    public var category: String?

    /** Gets or sets the progress. */
    public var currentProgressPercentage: Double?

    /** Gets or sets the description. */
    public var description: String?

    /** Gets or sets the id. */
    public var id: String?

    /** Gets or sets a value indicating whether this instance is hidden. */
    public var isHidden: Bool?

    /** Gets or sets the key. */
    public var key: String?

    public var lastExecutionResult: TaskResultModel?

    /** Gets or sets the name. */
    public var name: String?

    public var state: TaskState?

    /** Gets or sets the triggers. */
    public var triggers: [TaskTriggerInfoModel]?

    public init(category: String? = nil, currentProgressPercentage: Double? = nil, description: String? = nil, id: String? = nil, isHidden: Bool? = nil, key: String? = nil, lastExecutionResult: TaskResultModel? = nil, name: String? = nil, state: TaskState? = nil, triggers: [TaskTriggerInfoModel]? = nil) {
        self.category = category
        self.currentProgressPercentage = currentProgressPercentage
        self.description = description
        self.id = id
        self.isHidden = isHidden
        self.key = key
        self.lastExecutionResult = lastExecutionResult
        self.name = name
        self.state = state
        self.triggers = triggers
    }

    public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: StringCodingKey.self)

        category = try decoderContainer.decodeIfPresent("Category")
        currentProgressPercentage = try decoderContainer.decodeIfPresent("CurrentProgressPercentage")
        description = try decoderContainer.decodeIfPresent("Description")
        id = try decoderContainer.decodeIfPresent("Id")
        isHidden = try decoderContainer.decodeIfPresent("IsHidden")
        key = try decoderContainer.decodeIfPresent("Key")
        lastExecutionResult = try decoderContainer.decodeIfPresent("LastExecutionResult")
        name = try decoderContainer.decodeIfPresent("Name")
        state = try decoderContainer.decodeIfPresent("State")
        triggers = try decoderContainer.decodeArrayIfPresent("Triggers")
    }

    public func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: StringCodingKey.self)

        try encoderContainer.encodeIfPresent(category, forKey: "Category")
        try encoderContainer.encodeIfPresent(currentProgressPercentage, forKey: "CurrentProgressPercentage")
        try encoderContainer.encodeIfPresent(description, forKey: "Description")
        try encoderContainer.encodeIfPresent(id, forKey: "Id")
        try encoderContainer.encodeIfPresent(isHidden, forKey: "IsHidden")
        try encoderContainer.encodeIfPresent(key, forKey: "Key")
        try encoderContainer.encodeIfPresent(lastExecutionResult, forKey: "LastExecutionResult")
        try encoderContainer.encodeIfPresent(name, forKey: "Name")
        try encoderContainer.encodeIfPresent(state, forKey: "State")
        try encoderContainer.encodeIfPresent(triggers, forKey: "Triggers")
    }

}
