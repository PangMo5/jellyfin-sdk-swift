//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Class LibraryUpdateInfo. */
public struct LibraryUpdateInfoModel: APIModel {

    public var collectionFolders: [String]?

    /** Gets or sets the folders added to. */
    public var foldersAddedTo: [String]?

    /** Gets or sets the folders removed from. */
    public var foldersRemovedFrom: [String]?

    public var isEmpty: Bool?

    /** Gets or sets the items added. */
    public var itemsAdded: [String]?

    /** Gets or sets the items removed. */
    public var itemsRemoved: [String]?

    /** Gets or sets the items updated. */
    public var itemsUpdated: [String]?

    public init(collectionFolders: [String]? = nil, foldersAddedTo: [String]? = nil, foldersRemovedFrom: [String]? = nil, isEmpty: Bool? = nil, itemsAdded: [String]? = nil, itemsRemoved: [String]? = nil, itemsUpdated: [String]? = nil) {
        self.collectionFolders = collectionFolders
        self.foldersAddedTo = foldersAddedTo
        self.foldersRemovedFrom = foldersRemovedFrom
        self.isEmpty = isEmpty
        self.itemsAdded = itemsAdded
        self.itemsRemoved = itemsRemoved
        self.itemsUpdated = itemsUpdated
    }

    public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: StringCodingKey.self)

        collectionFolders = try decoderContainer.decodeArrayIfPresent("CollectionFolders")
        foldersAddedTo = try decoderContainer.decodeArrayIfPresent("FoldersAddedTo")
        foldersRemovedFrom = try decoderContainer.decodeArrayIfPresent("FoldersRemovedFrom")
        isEmpty = try decoderContainer.decodeIfPresent("IsEmpty")
        itemsAdded = try decoderContainer.decodeArrayIfPresent("ItemsAdded")
        itemsRemoved = try decoderContainer.decodeArrayIfPresent("ItemsRemoved")
        itemsUpdated = try decoderContainer.decodeArrayIfPresent("ItemsUpdated")
    }

    public func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: StringCodingKey.self)

        try encoderContainer.encodeIfPresent(collectionFolders, forKey: "CollectionFolders")
        try encoderContainer.encodeIfPresent(foldersAddedTo, forKey: "FoldersAddedTo")
        try encoderContainer.encodeIfPresent(foldersRemovedFrom, forKey: "FoldersRemovedFrom")
        try encoderContainer.encodeIfPresent(isEmpty, forKey: "IsEmpty")
        try encoderContainer.encodeIfPresent(itemsAdded, forKey: "ItemsAdded")
        try encoderContainer.encodeIfPresent(itemsRemoved, forKey: "ItemsRemoved")
        try encoderContainer.encodeIfPresent(itemsUpdated, forKey: "ItemsUpdated")
    }

}
