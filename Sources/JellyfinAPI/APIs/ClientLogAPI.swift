//
// ClientLogAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(Combine)
import Combine
#endif
#if canImport(AnyCodable)
import AnyCodable
#endif

open class ClientLogAPI {

    /**
     Upload a document.
     
     - parameter body: (body)  (optional)
     - returns: AnyPublisher<ClientLogDocumentResponseDto, Error>
     */
    #if canImport(Combine)
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func logFile(body: URL? = nil) -> AnyPublisher<ClientLogDocumentResponseDto, Error> {
        var requestTask: RequestTask?
        return Future<ClientLogDocumentResponseDto, Error> { promise in
            requestTask = logFileWithRequestBuilder(body: body).execute { result in
                switch result {
                case let .success(response):
                    promise(.success(response.body))
                case let .failure(error):
                    promise(.failure(error))
                }
            }
        }
        .handleEvents(receiveCancel: {
            requestTask?.cancel()
        })
        .eraseToAnyPublisher()
    }
    #endif

    /**
     Upload a document.
     - POST /ClientLog/Document
     - API Key:
       - type: apiKey Authorization 
       - name: CustomAuthentication
     - parameter body: (body)  (optional)
     - returns: RequestBuilder<ClientLogDocumentResponseDto> 
     */
    open class func logFileWithRequestBuilder(body: URL? = nil) -> RequestBuilder<ClientLogDocumentResponseDto> {
        let localVariablePath = "/ClientLog/Document"
        let localVariableURLString = JellyfinAPIAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ClientLogDocumentResponseDto>.Type = JellyfinAPIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
