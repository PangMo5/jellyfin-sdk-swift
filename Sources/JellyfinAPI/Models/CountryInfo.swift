//
// CountryInfo.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Class CountryInfo. */
public struct CountryInfo: Codable, JSONEncodable, Hashable {

    /** Gets or sets the name. */
    public var name: String?
    /** Gets or sets the display name. */
    public var displayName: String?
    /** Gets or sets the name of the two letter ISO region. */
    public var twoLetterISORegionName: String?
    /** Gets or sets the name of the three letter ISO region. */
    public var threeLetterISORegionName: String?

    public init(name: String? = nil, displayName: String? = nil, twoLetterISORegionName: String? = nil, threeLetterISORegionName: String? = nil) {
        self.name = name
        self.displayName = displayName
        self.twoLetterISORegionName = twoLetterISORegionName
        self.threeLetterISORegionName = threeLetterISORegionName
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name = "Name"
        case displayName = "DisplayName"
        case twoLetterISORegionName = "TwoLetterISORegionName"
        case threeLetterISORegionName = "ThreeLetterISORegionName"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(displayName, forKey: .displayName)
        try container.encodeIfPresent(twoLetterISORegionName, forKey: .twoLetterISORegionName)
        try container.encodeIfPresent(threeLetterISORegionName, forKey: .threeLetterISORegionName)
    }
}

