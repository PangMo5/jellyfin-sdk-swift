//
// AccessSchedule.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** An entity representing a user&#39;s access schedule. */
public struct AccessSchedule: Codable, Hashable {

    /** Gets the id of this instance. */
    public var id: Int?
    /** Gets the id of the associated user. */
    public var userId: String?
    /** Gets or sets the day of week. */
    public var dayOfWeek: DynamicDayOfWeek?
    /** Gets or sets the start hour. */
    public var startHour: Double?
    /** Gets or sets the end hour. */
    public var endHour: Double?

    public init(id: Int? = nil, userId: String? = nil, dayOfWeek: DynamicDayOfWeek? = nil, startHour: Double? = nil, endHour: Double? = nil) {
        self.id = id
        self.userId = userId
        self.dayOfWeek = dayOfWeek
        self.startHour = startHour
        self.endHour = endHour
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id = "Id"
        case userId = "UserId"
        case dayOfWeek = "DayOfWeek"
        case startHour = "StartHour"
        case endHour = "EndHour"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: CodingKeys.self)
        try encoderContainer.encodeIfPresent(id, forKey: .id)
        try encoderContainer.encodeIfPresent(userId, forKey: .userId)
        try encoderContainer.encodeIfPresent(dayOfWeek, forKey: .dayOfWeek)
        try encoderContainer.encodeIfPresent(startHour, forKey: .startHour)
        try encoderContainer.encodeIfPresent(endHour, forKey: .endHour)
    }
}
