//
// ChannelMappingOptionsDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Channel mapping options dto. */
public struct ChannelMappingOptionsDto: Codable, JSONEncodable, Hashable {

    /** Gets or sets list of tuner channels. */
    public var tunerChannels: [TunerChannelMapping]?
    /** Gets or sets list of provider channels. */
    public var providerChannels: [NameIdPair]?
    /** Gets or sets list of mappings. */
    public var mappings: [NameValuePair]?
    /** Gets or sets provider name. */
    public var providerName: String?

    public init(tunerChannels: [TunerChannelMapping]? = nil, providerChannels: [NameIdPair]? = nil, mappings: [NameValuePair]? = nil, providerName: String? = nil) {
        self.tunerChannels = tunerChannels
        self.providerChannels = providerChannels
        self.mappings = mappings
        self.providerName = providerName
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case tunerChannels = "TunerChannels"
        case providerChannels = "ProviderChannels"
        case mappings = "Mappings"
        case providerName = "ProviderName"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(tunerChannels, forKey: .tunerChannels)
        try container.encodeIfPresent(providerChannels, forKey: .providerChannels)
        try container.encodeIfPresent(mappings, forKey: .mappings)
        try container.encodeIfPresent(providerName, forKey: .providerName)
    }
}

